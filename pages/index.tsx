import React, { useState, useEffect, useRef } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
// Importing Components
import Navbar from '../components/Navbar';
import Sidebar from '../components/Sidebar';
// Importing Icons
import { IoIosArrowDropdown } from 'react-icons/io';
import { AiOutlineCheck } from "react-icons/ai";
import { BsPeople } from "react-icons/bs";
// Importing Widgets
import Widget1 from '../components/Widgets/Widget1';
import Widget2 from '../components/Widgets/Widget2';
import Widget3 from '../components/Widgets/Widget3';
import Widget4 from '../components/Widgets/Widget4';
import Widget5 from '../components/Widgets/Widget5';
import Widget6 from '../components/Widgets/Widget6';

const Home: NextPage = () => {
  const [isOpen, setIsOpen] = useState<Boolean>(true);

  const [currentMenuItem, setCurrentMenuItem] = useState<Number>(1);

  const [currentFullLengthItem, setCurrentFullLengthItem] = useState<Number>(1);

  // eslint-disable-next-line react-hooks/rules-of-hooks
  const dragItem = useRef<any>();

  // eslint-disable-next-line react-hooks/rules-of-hooks
  const dragOverItem = useRef<any>();

  // eslint-disable-next-line react-hooks/rules-of-hooks
  const [list, setList] = useState([1, 2, 3, 4, 5, 6]);

  // on Pointer Down
  const [pointerDown, setPointerDown] = useState<Boolean>(false);
  const [pointerOut, setPointerOut] = useState<Boolean>(false);

  const dragStart = (e: any, position: any) => {
    dragItem.current = position;
    console.log(e.target.innerHTML);
  };

  const dragEnter = (e: any, position: any) => {
    dragOverItem.current = position;
    console.log(e.target.innerHTML);
  };

  const drop = (e: any) => {
    const copyListItems = [...list];
    const dragItemContent = copyListItems[dragItem.current];
    copyListItems.splice(dragItem.current, 1);
    copyListItems.splice(dragOverItem.current, 0, dragItemContent);
    dragItem.current = null;
    dragOverItem.current = null;
    setList(copyListItems);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Home - Project Management Software</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logocopy.ico" />
      </Head>

      <main className={styles.main}>
        <Navbar isOpen={isOpen} setIsOpen={setIsOpen} />
        <div className='d-flex'>
          <Sidebar currentMenuItem={currentMenuItem} setCurrentMenuItem={setCurrentMenuItem} isOpen={isOpen} setIsOpen={setIsOpen} />

          <div className={`${styles.rightSideContainer} ${(isOpen) ? (styles.shrinkContainer) : (styles.expandContainer)}`}>
            {/* Home Page */}
            <section className={(currentMenuItem === 1) ? ("") : ("d-none")}>
              <br />
              <h3 style={{ marginLeft: 30, marginTop: 5, color: "black", fontWeight: "lighter" }}>Home</h3>
              <br />
              <div className='text-center'>
                Wednesday, November 16
              </div>
              <div>
                <h1 className='text-center text-dark' style={{ fontWeight: "lighter" }}>
                  Good evening, bilal
                </h1>
              </div>
              <section className='d-flex justify-content-center'>
                <div className={styles.statsContainer}>
                  <div className={styles.stats1}>
                    {/* Secondary */}
                    <div className="btn-group" style={{ fontSize: 12, height: 28, boxShadow: "none" }}>
                      <button type="button" className={`btn btn-btnDrop ${styles.btn_dropdown}`} data-mdb-toggle="dropdown" aria-expanded="false">
                        My month <IoIosArrowDropdown style={{ marginTop: -2 }} />
                      </button>
                      <ul className="dropdown-menu">
                        <li><a className="dropdown-item" href="#">My Week</a></li>
                        <li><a className="dropdown-item" href="#">My Month</a></li>
                        {/* <li><a className="dropdown-item" href="#">Something else here</a></li>
                        <li><hr className="dropdown-divider" /></li>
                        <li><a className="dropdown-item" href="#">Separated link</a></li> */}
                      </ul>
                    </div>
                  </div>
                  <div className={styles.stats2}>
                    <span style={{ fontSize: 20, fontWeight: "400" }}> <AiOutlineCheck style={{ marginTop: -5 }} /> 7</span> <span style={{ marginTop: 3 }}>&nbsp; tasks completed</span>
                  </div>
                  <div className={styles.stats3}>
                    <span style={{ fontSize: 20, fontWeight: "400" }}> <BsPeople style={{ marginTop: -5 }} />&nbsp;2</span> <span style={{ marginTop: 3 }}>&nbsp; collaborators</span>
                  </div>
                </div>
              </section>

              {/* ++++++++++++++++++++++++++++++++++++ Widgets Container ++++++++++++++++++++++++++++++++++++ */}
              <section className={styles.widgetsContainer}>
                {list &&
                  list.map((item, index) => (
                    <div
                      className={`${styles.widget} ${((item == currentFullLengthItem) && (styles.fullWidthWidget))} ${((pointerDown && item == currentFullLengthItem) ? (styles.pointerDown) : (styles.pointerOut))}`}
                      onDragStart={e => dragStart(e, index)}
                      onDragEnter={e => dragEnter(e, index)}
                      onDragEnd={drop}
                      onDragOver={() => setPointerDown(true)}
                      onMouseUp={() => setPointerDown(false)}
                      onDoubleClick={() => {
                        console.log("Double Clicked");
                        if (item === currentFullLengthItem) {
                          setCurrentFullLengthItem(0);
                        }
                        else {
                          setCurrentFullLengthItem(item);
                        }
                      }}
                      key={index}
                      draggable
                    >
                      {item===1 && <Widget1 />}
                      {item===2 && <Widget2 />}
                      {item===3 && <Widget3 />}
                      {item===4 && <Widget4 />}
                      {item===5 && <Widget5 />}
                      {item===6 && <Widget6 />}
                    </div>
                  ))}
              </section>
              {/* ++++++++++++++++++++++++++++++++++++ Widgets Container ++++++++++++++++++++++++++++++++++++ */}

            </section>

            {/* My Tasks Page */}
            <section className={(currentMenuItem === 2) ? ("") : ("d-none")}>
              <br />
              <h3 style={{ marginLeft: 30, marginTop: 5, color: "black", fontWeight: "lighter" }}>My Tasks</h3>
            </section>

            {/* Inbox Page */}
            <section className={(currentMenuItem === 3) ? ("") : ("d-none")}>
              <br />
              <h3 style={{ marginLeft: 30, marginTop: 5, color: "black", fontWeight: "lighter" }}>Inbox</h3>
            </section>

            {/* Reporting Page */}
            <section className={(currentMenuItem === 4) ? ("") : ("d-none")}>
              <br />
              <h3 style={{ marginLeft: 30, marginTop: 5, color: "black", fontWeight: "lighter" }}>Reporting</h3>
            </section>

            {/* Portfolios Page */}
            <section className={(currentMenuItem === 5) ? ("") : ("d-none")}>
              <br />
              <h3 style={{ marginLeft: 30, marginTop: 5, color: "black", fontWeight: "lighter" }}>Portfolios</h3>
            </section>

            {/* Goals Page */}
            <section className={(currentMenuItem === 6) ? ("") : ("d-none")}>
              <br />
              <h3 style={{ marginLeft: 30, marginTop: 5, color: "black", fontWeight: "lighter" }}>Goals</h3>
            </section>
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        {/* <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a> */}
      </footer>
    </div>
  )
}
export default Home;
